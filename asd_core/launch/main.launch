<launch>

    <arg name="rtabmapviz" default="false" />
    <arg name="using_zed" default="false" />
    <arg name="cmd_topic" default="/mouse_vel" />

    <arg name="odom_topic" default="/odom" />
    <arg name="odom_frame" default="odom" />

    <arg name="imu_topic" default="/imu" />
    <arg name="rgb_image_topic" default="/camera/rgb/image_raw" />
    <arg name="rgb_camera_info_topic" default="/camera/rgb/camera_info" />

    <arg name="depth_image_topic" default="/camera/depth/image_raw" />
    <arg name="depth_camera_info_topic" default="/camera/depth/camera_info" />

    <group ns="rtabmap">
        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="-d">
            <param name="database_path" type="string" value=""/>
            <!-- ~/.ros/rtabmap.db -->
            <param name="frame_id" type="string" value="base_footprint"/>
            <param name="initial_pose" type="string" value="0 0 0 0 0 0" />

            <param name="subscribe_rgb" type="bool" value="true"/>
            <param name="subscribe_depth" type="bool" value="true"/>
            <param name="subscribe_scan" type="bool" value="false"/>

            <param name="approx_sync" type="bool" value="true"/>
            <param name="wait_for_transform" value="0.5" />

            <!-- use actionlib to send goals to move_base -->
            <param name="use_action_for_goal" type="bool" value="true"/>
            <remap from="move_base" to="/move_base"/>

            <!-- inputs -->
            <remap from="odom" to="$(arg odom_topic)"/>
            <remap from="rgb/image" to="$(arg rgb_image_topic)"/>
            <remap from="rgb/camera_info" to="$(arg rgb_camera_info_topic)"/>
            <remap from="depth/image" to="$(arg depth_image_topic)"/>
            <remap from="depth/camera_info" to="$(arg depth_camera_info_topic)"/>

            <!-- output -->
            <remap from="grid_map" to="/map"/>

            <!-- localization mode -->
            <param name="Mem/IncrementalMemory" type="string" value="true"/>

            <param name="imu_topic" value="$(arg imu_topic)" />
            <!-- only used with VIO approaches -->
            <param name="wait_imu_to_init" value="true" />
            <!-- <param name="gps_topic" value="/gps/fix" /> -->
            <!-- gps async subscription -->

            <!-- Extra Parameters -->
            <param if="$(arg using_zed)" name="Vis/CorFlowMaxLevel" type="string" value="5" />
            <param if="$(arg using_zed)" name="Stereo/MaxDisparity" type="string" value="200" />
            <param name="visual_odometry" value="true" />
            <param name="Odom/Strategy" type="string" value="1" />
            <param name="Odom/GuessMotion" type="string" value="true" />
        </node>

        <!-- visualization with rtabmapviz -->
        <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
            <param name="subscribe_scan" type="bool" value="false"/>
            <param name="subscribe_depth" type="bool" value="true"/>
            <param name="subscribe_odom" type="bool" value="true"/>

            <param name="frame_id" type="string" value="base_footprint"/>
            <param name="approx_sync" type="bool" value="true"/>

            <remap from="odom" to="$(arg odom_frame)"/>
        </node>
    </group>

    <group>
        <arg name="marker_size" default="14.6" />
        <arg name="max_new_marker_error" default="0.08" />
        <arg name="max_track_error" default="0.2" />

        <arg name="cam_image_topic" default="$(arg rgb_image_topic)" />
        <arg name="cam_info_topic" default="$(arg rgb_camera_info_topic)" />
        <arg name="output_frame" default="map" />

        <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame)" />
    </group>

    <!-- move_base -->
    <include file="$(find asd_core)/launch/move_base.launch">
        <arg name="move_forward_only" value="false"/>
        <arg name="cmd_vel_topic" default="$(arg cmd_topic)" />
    </include>

    <!-- Publish tf 'base_footprint' as pose. -->
    <node pkg="asd_core" unless="$(arg using_zed)" type="tf_to_pose_publisher.py" name="leo_pose_publisher">
        <param name="from_frame" type="string" value="$(arg odom_frame)" />
        <param name="to_frame" type="string" value="base_footprint" />
    </node>

    <!-- Launch elevation mapping node. -->
    <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
        <rosparam if="$(arg using_zed)" command="load" file="$(find asd_core)/config/elevation_mapping/default_zed.yaml" />
        <rosparam unless="$(arg using_zed)" command="load" file="$(find asd_core)/config/elevation_mapping/default.yaml" />
        <rosparam command="load" file="$(find elevation_mapping)/config/sensor_processors/perfect.yaml" />
    </node>
</launch>